" ==================================================
" settings
" ==================================================

" 让配置变更立即生效
autocmd BufWritePost $MYVIMRC source $MYVIMRC

" 开启实时搜索功能
set incsearch

" 搜索时大小写不敏感
set ignorecase

" 关闭兼容模式
set nocompatible

" vim 自身命令行模式智能补全
set wildmenu

" 总是显示状态栏
set laststatus=2

" 显示光标当前位置
set ruler

" 开启行号显示
set number

" 开启相对行号
set relativenumber

" 在底部显示当前键入的指令
set showcmd

" 对应括号高亮
set showmatch

" 高亮显示当前行/列
set cursorline

" set cursorcolumn
" 高亮显示搜索结果
set hlsearch

" 禁止折行
set nowrap

" 开启语法高亮功能
syntax enable

" 允许用指定语法高亮配色方案替换默认方案
syntax on

" 自适应不同语言的智能缩进
filetype indent on

" 将制表符扩展为空格
set expandtab

" 设置编辑时制表符占用空格数
set tabstop=4

" 设置格式化时制表符占用空格数
set shiftwidth=4

" 让 vim 把连续数量的空格视为一个制表符
set softtabstop=4

" 基于缩进或语法进行代码折叠
"set foldmethod=indent
set foldmethod=syntax

" 启动 vim 时关闭折叠代码
set nofoldenable

" 垂直滚动时，光标距离顶部/底部的位置（单位：行）
set scrolloff=10

" 设置文件编码
set encoding=UTF-8

" 如果文件夹不存在，则新建文件夹
if !isdirectory(expand("$HOME/.vim/files/backup")) || !isdirectory(expand("$HOME/.vim/files/swap")) && !isdirectory(expand("$HOME/.vim/files/undo"))
    silent !mkdir -p ~/.vim/files/backup/
    silent !mkdir -p ~/.vim/files/swap/
    silent !mkdir -p ~/.vim/files/undo/
    silent !mkdir -p ~/.vim/files/info/
endif

" 备份文件
set backup
set backupdir   =~/.vim/files/backup/

" 交换文件
set directory   =~/.vim/files/swap//
set updatecount =100

" 撤销文件
set undofile
set undodir     =~/.vim/files/undo/

" viminfo 文件
set viminfo     ='100,n~/.vim/files/info/viminfo

" 离开插入模式
autocmd InsertLeave,WinEnter * set cursorline
" 进入插入模式
autocmd InsertEnter,WinLeave * set nocursorline nohlsearch


" ==================================================
" map
" ==================================================

" 定义快捷键到行首和行尾
nmap H 0
nmap L $

noremap ; :
noremap : ;

" buffer 切换快捷键
nnoremap <C-h> :bp<CR>
nnoremap <C-l> :bn<CR>

" Split fast
nnoremap <leader>\ :vs<CR>
nnoremap <leader>- :sp<CR>


" ==================================================
" Leader
" ==================================================

" 定义快捷键的前缀，即<Leader>
let mapleader="\<space>"

" Open the vimrc file anytime
nnoremap <Leader>rc :e $MYVIMRC<CR>

" 去除搜索高亮显示
nnoremap <Leader><CR> :nohlsearch<CR>

" 设置快捷键将选中文本块复制至系统剪贴板
vnoremap <Leader>y "+y

" 设置快捷键将系统剪贴板内容粘贴至 vim
nnoremap <Leader>p "+p

" 定义快捷键关闭当前分割窗口
nnoremap <Leader>q :q<CR>

" 定义快捷键保存当前窗口内容
nnoremap <Leader>w :w<CR>

" 定义快捷键关闭当前 buffer
nnoremap <Leader>d :bd<CR>

" 定义快捷键保存所有窗口内容并退出 vim
nnoremap <Leader>WQ :wa<CR>:q<CR>

" 不做任何保存，直接退出 vim
nnoremap <Leader>Q :qa!<CR>

" 依次遍历子窗口
nnoremap nw <C-W><C-W>

" 跳转至右方的窗口
nnoremap <Leader>l <C-W>l

" 跳转至左方的窗口
nnoremap <Leader>h <C-W>h

" 跳转至上方的子窗口
nnoremap <Leader>k <C-W>k

" 跳转至下方的子窗口
nnoremap <Leader>j <C-W>j

" 定义快捷键在结对符之间跳转
nnoremap <Leader>M %


" ==================================================
" Mode Settings
" ==================================================

" 设置插入模式光标为竖线
let &t_SI.="\e[5 q" "SI = INSERT mode
let &t_SR.="\e[4 q" "SR = REPLACE mode
let &t_EI.="\e[1 q" "EI = NORMAL mode (ELSE)

"  Cursor settings:

"  1 -> blinking block
"  2 -> solid block
"  3 -> blinking underscore
"  4 -> solid underscore
"  5 -> blinking vertical bar
"  6 -> solid vertical bar

"let &t_SI = "\<Esc>]50;CursorShape=1\x7"
"let &t_SR = "\<Esc>]50;CursorShape=2\x7"
"let &t_EI = "\<Esc>]50;CursorShape=0\x7"


" ==================================================
" Plug
" ==================================================

" vim-plug config
call plug#begin('~/.vim/plugged')
" Plug 'rdnetto/YCM-Generator', { 'branch': 'stable' }
Plug 'altercation/vim-colors-solarized'
Plug 'vim-airline/vim-airline'                 " 状态栏
Plug 'vim-airline/vim-airline-themes'          " 状态栏
Plug 'derekwyatt/vim-fswitch'                  " 接口与实现快速切换
Plug 'scrooloose/nerdcommenter'                " 快速开关注释插件
Plug 'scrooloose/nerdtree'                     " 工程管理
Plug 'ryanoasis/vim-devicons'                  " 文件图标
Plug 'fholgado/minibufexpl.vim'                " 多文档编辑
Plug 'Lokaltog/vim-easymotion'                 " 快速移动
"Plug 'suan/vim-instant-markdown'               " markdown 即时预览
call plug#end()


" Plug setting

filetype off
filetype plugin on
filetype plugin indent on

" 配色方案
set background=dark
colorscheme pablo
" colorscheme solarized
" colorscheme molokai
" colorscheme phd

" 设置NERDTree子窗口宽度
let NERDTreeWinSize=32

" 设置NERDTree子窗口位置
let NERDTreeWinPos="left"

" 显示隐藏文件
let NERDTreeShowHidden=1

" NERDTree 子窗口中不显示冗余帮助信息
let NERDTreeMinimalUI=1

" 删除文件时自动删除文件对应 buffer
let NERDTreeAutoDeleteBuffer=1

" 注释加上空格
let g:NERDSpaceDelims=1

" Plug map

" *.cpp 和 *.h 间切换
nmap <silent> <Leader>sw :FSHere<cr>

" 使用 NERDTree 插件查看工程文件。
nmap <Leader><Leader> :NERDTreeToggle<CR>

